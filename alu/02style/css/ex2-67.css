@charset "utf-8";

* {
    /* margin: 0;
    padding: 0; */
    /* box-sizing: border-box;
    outline: 1px solid red; */
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    outline: 1px solid red;

}
li {
    list-style-type: none;
}
.gallery{ background: rgb(23, 47, 255); }
/* 자식요소 전부가 float값을 가지면, 부모는 자식의 높이를 인식하지 못한다. */
.gallery li {
    /* float: left;
    width: 150px;
    margin-right: 10px;
    text-align: center; */
    /* 연속적으로 객체가 float이 선언이 되었다면 모두 선언방향으로 정렬한다. */
    /* float: right;로 선언이 연속적인 경우에는 역순으로 배치가된다. */

    float: left;
    width: 150px;
    margin-right: 10px;
    text-align: center;
}
.gallery h3 {
    /* padding: 5px; */
    padding: 5px;
}
.gallery li h3 {
    /* background: #daa; */
}
/* css에서 선택자는 내 다음형제, 자식만 컨트롤 할 수있다 */

.gallery li + li h3 {
    /* background: #abc; */
}
.gallery li + li + li h3 {
    /* background: #eba; */
}
.gallery li + li + li + li h3 {
    /* background: #aa7; */
}

/* 인접선택자와 같은 속성선언 갱신을 통한 배경깔기, 어려우면 개별 클래스를 적용하면 된다. */
.gallery li p {
    /* padding: 10px;
    text-align: justify;
    font-size: 14px; */
    padding: 10px;
    text-align: justify;
    font-size: 14px;
}
.gallery li:nth-child(1) > h3{ background: #daa; }
.gallery li:nth-child(2) > h3{ background: #abc; }
.gallery li:nth-child(3) > h3{ background: #eba; }
.gallery li:nth-child(4) > h3{ background: #aa7; }
/* .liBgColor{ background: #daa; } */



