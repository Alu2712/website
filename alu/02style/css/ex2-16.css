@charset "utf-8";

p:first-letter {
    font-size: 300%;
    color: aqua;
}
/* 해당 태그안에 있는 텍스트 중 첫글자만 적용 */


.noneCss > span{
    font-size: 300%;
}
/* 모를때는 포함관계로 선택하여 적용시킬수있다.*/




p:first-child { color: blue; }
/* 연속 나열되어있는 객체중 첫번째 객체 */

p { background:lightgray; }	
p:last-child { background: green;}
/* 연속 나열되어있는 객체중 마지막 객체 */
/* ~child 선언되는 것은 종류 무관 모두 동등한 자식으로 본다. 선택자의 태그가 조건에 맞지 않으면 표현 보류 */


p:nth-child(3) { color: red; }
/* 선택자:nth-child(n) { 속성선언 }, n은 자연수, ()안에 들어갈수 있는 조건은 수식가능 */

/* p:nth-child(3n-2) { color: violet; } */
p:nth-child(odd) { color: blueviolet; }
p:nth-child(even) { color: aqua; }

/* 선택자조건, 가상요소 선택자 조건, ()안의 수식 조건이 모두 일치해야 속성이 적용 */


/* p:before {content: "★";} */
/* p:after {content: "\1F602";} */

/* p:nth-child(even)::after{
    content: "\1F31E";
    font-size: 150%;
} */

/* 객체 안의 앞/뒤에 요소를 넣을 수 있다. 이미지/특수문자/이모지 etc 모두 넣을수 있으며, position을 배우면 위치에 자유를 얻는다.  */

/* 꾸밈요소로써 사용을 하면 되고, 추후에 스크립트를 통해서 라도 이벤트를 걸 수 없으니 그러한 목적이 있는 요소라면 애시당초 html 태그로 삽입해야한다. */

/* content 속성은 '내용물을 넣는다'로 인지하고, 텍스트류(인라인)를 작성하면 각 요소에 적용된다. */
/* content에 엔티티코드나 이모지 등등의 요소가 아닌, 실제 보여지는 특수문자 그림형태로 입력이 되면 그룹군을 생성하여 적용된다. */

/* content: "";입력하여 의미없는 도형들을 삽입 할 수 있으며, ::before, ::after에서 content 속성이 입력되지 않으면 화면 출력이 되지 않는다 */

.box::after{
    content: "네트워크 연결 살려내라!!";
    color: red;
}
p:nth-child(2){
    color: fuchsia !important;
}
